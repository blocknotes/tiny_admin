# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `phlex` gem.
# Please instead update this file by running `bin/tapioca gem phlex`.

# source://phlex//lib/phlex.rb#7
module Phlex; end

# @api private
#
# source://phlex//lib/phlex.rb#35
Phlex::ATTRIBUTE_CACHE = T.let(T.unsafe(nil), Concurrent::Map)

# A specialised ArgumentError for Phlex.
#
# source://phlex//lib/phlex.rb#14
class Phlex::ArgumentError < ::ArgumentError
  include ::Phlex::Error
end

# @api private
#
# source://phlex//lib/phlex/black_hole.rb#4
module Phlex::BlackHole
  extend ::Phlex::BlackHole

  # @api private
  #
  # source://phlex//lib/phlex/black_hole.rb#7
  def <<(anything); end

  # @api private
  #
  # source://phlex//lib/phlex/black_hole.rb#19
  def clear; end

  # @api private
  #
  # source://phlex//lib/phlex/black_hole.rb#15
  def dup; end

  # @api private
  #
  # source://phlex//lib/phlex/black_hole.rb#11
  def length; end
end

# @api private
#
# source://phlex//lib/phlex/callable.rb#4
module Phlex::Callable
  # @api private
  #
  # source://phlex//lib/phlex/callable.rb#5
  def to_proc; end
end

# @api private
#
# source://phlex//lib/phlex/context.rb#4
class Phlex::Context
  # @api private
  # @return [Context] a new instance of Context
  #
  # source://phlex//lib/phlex/context.rb#5
  def initialize; end

  # @api private
  #
  # source://phlex//lib/phlex/context.rb#9
  def target; end

  # @api private
  #
  # source://phlex//lib/phlex/context.rb#9
  def target=(_arg0); end

  # @api private
  #
  # source://phlex//lib/phlex/context.rb#11
  def with_target(new_target); end
end

# Include this module into an {HTML} or {SVG} component to make it yield the content block before calling {#template}.
#
# @example
#   class Tabs < Phlex::HTML
#   include DeferredRender
#
#   Tab = Data.define(:name, :content)
#
#   def initialize
#   @tabs = []
#   end
#
#   def template
#   @tabs.each { |t| a { t.name } }
#   @tabs.each { |t| article(&t.content) }
#   end
#
#   def tab(name, &content)
#   @tabs << Tab.new(name, content)
#   end
#   end
#
# source://phlex//lib/phlex/deferred_render.rb#23
module Phlex::DeferredRender; end

# @api private
#
# source://phlex//lib/phlex/element_clobbering_guard.rb#4
module Phlex::ElementClobberingGuard
  # @api private
  #
  # source://phlex//lib/phlex/element_clobbering_guard.rb#5
  def method_added(method_name); end
end

# Extending this module provides the {register_element} macro for registering your own custom elements. It's already extended by {HTML} and {SVG}.
#
# @example
#   module MyCustomElements
#   extend Phlex::Elements
#
#   register_element :trix_editor
#   end
#
#   class MyComponent < Phlex::HTML
#   include MyCustomElements
#
#   def template
#   trix_editor
#   end
#   end
#
# source://phlex//lib/phlex/elements.rb#22
module Phlex::Elements
  # Register a custom element. This macro defines an element method for the current class and descendents only. There is no global element registry.
  #
  # @example Register the custom element `<trix-editor>`
  #   register_element :trix_editor
  # @note The methods defined by this macro depend on other methods from {SGML} so they should always be mixed into an {HTML} or {SVG} component.
  # @param method_name [Symbol]
  # @param tag [String] the name of the tag, otherwise this will be the method name with underscores replaced with dashes.
  # @return [Symbol] the name of the method created
  #
  # source://phlex//lib/phlex/elements.rb#35
  def register_element(method_name, tag: T.unsafe(nil)); end

  # @api private
  #
  # source://phlex//lib/phlex/elements.rb#76
  def register_void_element(method_name, tag: T.unsafe(nil)); end

  # @api private
  #
  # source://phlex//lib/phlex/elements.rb#24
  def registered_elements; end
end

# Included in all Phlex exceptions allowing you to match any Phlex error.
#
# @example Rescue any Phlex error:
#   rescue Phlex::Error
#
# source://phlex//lib/phlex.rb#11
module Phlex::Error; end

# @abstract Subclass and define {#template} to create an HTML component class.
#
# source://phlex//lib/phlex/html.rb#6
class Phlex::HTML < ::Phlex::SGML
  include ::Phlex::HTML::StandardElements
  include ::Phlex::HTML::VoidElements
  include ::Phlex::Helpers
  extend ::Phlex::Elements
  extend ::Phlex::ElementClobberingGuard

  # Output an HTML doctype.
  #
  # source://phlex//lib/phlex/html.rb#28
  def doctype; end

  # Outputs an `<svg>` tag
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/svg
  #
  # source://phlex//lib/phlex/html.rb#36
  def svg(*_arg0, **_arg1, &_arg2); end

  # @api private
  #
  # source://phlex//lib/phlex/html.rb#45
  def unbuffered; end

  class << self
    # @api private
    #
    # source://phlex//lib/phlex/html.rb#13
    def __unbuffered_class__; end
  end
end

# A list of HTML attributes that have the potential to execute unsafe JavaScript.
#
# source://phlex//lib/phlex/html.rb#7
Phlex::HTML::EVENT_ATTRIBUTES = T.let(T.unsafe(nil), Hash)

# Standard HTML elements accept content and always have a closing tag.
#
# source://phlex//lib/phlex/html/standard_elements.rb#4
module Phlex::HTML::StandardElements
  extend ::Phlex::Elements

  # source://phlex//lib/phlex/elements.rb#41
  def _a(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _abbr(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _address(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _article(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _aside(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _b(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _bdi(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _bdo(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _blockquote(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _body(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _button(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _caption(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _cite(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _code(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _colgroup(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _data(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _datalist(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _dd(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _del(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _details(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _dfn(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _dialog(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _div(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _dl(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _dt(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _em(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _fieldset(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _figcaption(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _figure(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _footer(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _form(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _h1(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _h2(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _h3(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _h4(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _h5(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _h6(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _head(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _header(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _hgroup(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _html(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _i(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _iframe(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _ins(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _kbd(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _label(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _legend(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _li(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _main(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _map(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _mark(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _meter(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _nav(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _noscript(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _object(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _ol(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _optgroup(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _option(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _output(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _p(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _picture(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _pre(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _progress(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _q(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _rp(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _rt(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _ruby(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _s(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _samp(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _script(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _section(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _select(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _slot(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _small(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _span(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _strong(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _style(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _sub(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _summary(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _sup(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _svg(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _table(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _tbody(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _td(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _template_tag(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _textarea(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _tfoot(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _th(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _thead(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _time(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _title(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _tr(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _u(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _ul(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _video(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _wbr(**attributes, &block); end

  # Outputs an `<a>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/a
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def a(**attributes, &block); end

  # Outputs an `<abbr>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/abbr
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def abbr(**attributes, &block); end

  # Outputs an `<address>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/address
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def address(**attributes, &block); end

  # Outputs an `<article>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/article
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def article(**attributes, &block); end

  # Outputs an `<aside>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/aside
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def aside(**attributes, &block); end

  # Outputs a `<b>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/b
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def b(**attributes, &block); end

  # Outputs a `<bdi>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/bdi
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def bdi(**attributes, &block); end

  # Outputs a `<bdo>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/bdo
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def bdo(**attributes, &block); end

  # Outputs a `<blockquote>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/blockquote
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def blockquote(**attributes, &block); end

  # Outputs a `<body>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/body
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def body(**attributes, &block); end

  # Outputs a `<button>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/button
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def button(**attributes, &block); end

  # Outputs a `<caption>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/caption
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def caption(**attributes, &block); end

  # Outputs a `<cite>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/cite
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def cite(**attributes, &block); end

  # Outputs a ``` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/code
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def code(**attributes, &block); end

  # Outputs a `<colgroup>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/colgroup
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def colgroup(**attributes, &block); end

  # Outputs a `<data>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/data
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def data(**attributes, &block); end

  # Outputs a `<datalist>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/datalist
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def datalist(**attributes, &block); end

  # Outputs a `<dd>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/dd
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def dd(**attributes, &block); end

  # Outputs a `<del>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/del
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def del(**attributes, &block); end

  # Outputs a `<details>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/details
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def details(**attributes, &block); end

  # Outputs a `<dfn>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/dfn
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def dfn(**attributes, &block); end

  # Outputs a `<dialog>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/dialog
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def dialog(**attributes, &block); end

  # Outputs a `<div>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/div
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def div(**attributes, &block); end

  # Outputs a `<dl>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/dl
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def dl(**attributes, &block); end

  # Outputs a `<dt>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/dt
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def dt(**attributes, &block); end

  # Outputs an `<em>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/em
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def em(**attributes, &block); end

  # Outputs a `<fieldset>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/fieldset
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def fieldset(**attributes, &block); end

  # Outputs a `<figcaption>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/figcaption
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def figcaption(**attributes, &block); end

  # Outputs a `<figure>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/figure
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def figure(**attributes, &block); end

  # Outputs a `<footer>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/footer
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def footer(**attributes, &block); end

  # Outputs a `<form>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/form
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def form(**attributes, &block); end

  # Outputs an `<h1>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/h1
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def h1(**attributes, &block); end

  # Outputs an `<h2>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/h2
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def h2(**attributes, &block); end

  # Outputs an `<h3>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/h3
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def h3(**attributes, &block); end

  # Outputs an `<h4>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/h4
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def h4(**attributes, &block); end

  # Outputs an `<h5>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/h5
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def h5(**attributes, &block); end

  # Outputs an `<h6>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/h6
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def h6(**attributes, &block); end

  # Outputs a `<head>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/head
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def head(**attributes, &block); end

  # Outputs a `<header>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/header
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def header(**attributes, &block); end

  # Outputs a `<hgroup>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/hgroup
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def hgroup(**attributes, &block); end

  # Outputs a `<html>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/html
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def html(**attributes, &block); end

  # Outputs an `<i>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/i
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def i(**attributes, &block); end

  # Outputs an `<iframe>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/iframe
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def iframe(**attributes, &block); end

  # Outputs an `<ins>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/ins
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def ins(**attributes, &block); end

  # Outputs a `<kbd>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/kbd
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def kbd(**attributes, &block); end

  # Outputs a `<label>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/label
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def label(**attributes, &block); end

  # Outputs a `<legend>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/legend
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def legend(**attributes, &block); end

  # Outputs a `<li>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/li
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def li(**attributes, &block); end

  # Outputs a `<main>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/main
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def main(**attributes, &block); end

  # Outputs a `<map>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/map
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def map(**attributes, &block); end

  # Outputs a `<mark>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/mark
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def mark(**attributes, &block); end

  # Outputs a `<meter>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/meter
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def meter(**attributes, &block); end

  # Outputs a `<nav>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/nav
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def nav(**attributes, &block); end

  # Outputs a `<noscript>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/noscript
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def noscript(**attributes, &block); end

  # Outputs an `<object>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/object
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def object(**attributes, &block); end

  # Outputs an `<ol>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/ol
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def ol(**attributes, &block); end

  # Outputs an `<optgroup>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/optgroup
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def optgroup(**attributes, &block); end

  # Outputs an `<option>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/option
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def option(**attributes, &block); end

  # Outputs an `<output>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/output
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def output(**attributes, &block); end

  # Outputs a `<p>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/p
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def p(**attributes, &block); end

  # Outputs a `<picture>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/picture
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def picture(**attributes, &block); end

  # Outputs a `<pre>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/pre
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def pre(**attributes, &block); end

  # Outputs a `<progress>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/progress
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def progress(**attributes, &block); end

  # Outputs a `<q>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/q
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def q(**attributes, &block); end

  # Outputs a `<rp>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/rp
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def rp(**attributes, &block); end

  # Outputs a `<rt>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/rt
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def rt(**attributes, &block); end

  # Outputs a `<ruby>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/ruby
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def ruby(**attributes, &block); end

  # Outputs a `<s>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/s
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def s(**attributes, &block); end

  # Outputs a `<samp>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/samp
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def samp(**attributes, &block); end

  # Outputs a `<script>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/script
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def script(**attributes, &block); end

  # Outputs a `<section>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/section
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def section(**attributes, &block); end

  # Outputs a `<select>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/select
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def select(**attributes, &block); end

  # Outputs a `<slot>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/slot
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def slot(**attributes, &block); end

  # Outputs a `<small>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/small
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def small(**attributes, &block); end

  # Outputs a `<span>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/span
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def span(**attributes, &block); end

  # Outputs a `<strong>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/strong
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def strong(**attributes, &block); end

  # Outputs a `<style>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/style
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def style(**attributes, &block); end

  # Outputs a `<sub>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/sub
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def sub(**attributes, &block); end

  # Outputs a `<summary>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/summary
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def summary(**attributes, &block); end

  # Outputs a `<sup>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/sup
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def sup(**attributes, &block); end

  # Outputs an `<svg>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def svg(**attributes, &block); end

  # Outputs a `<table>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/table
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def table(**attributes, &block); end

  # Outputs a `<tbody>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/tbody
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def tbody(**attributes, &block); end

  # Outputs a `<td>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/td
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def td(**attributes, &block); end

  # Outputs a `<template>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/template
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def template_tag(**attributes, &block); end

  # Outputs a `<textarea>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/textarea
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def textarea(**attributes, &block); end

  # Outputs a `<tfoot>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/tfoot
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def tfoot(**attributes, &block); end

  # Outputs a `<th>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/th
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def th(**attributes, &block); end

  # Outputs a `<thead>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/thead
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def thead(**attributes, &block); end

  # Outputs a `<time>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/time
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def time(**attributes, &block); end

  # Outputs a `<title>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/title
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def title(**attributes, &block); end

  # Outputs a `<tr>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/tr
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def tr(**attributes, &block); end

  # Outputs a `<u>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/u
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def u(**attributes, &block); end

  # Outputs a `<ul>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/ul
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def ul(**attributes, &block); end

  # Outputs a `<video>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/video
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def video(**attributes, &block); end

  # Outputs a `<wbr>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/wbr
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def wbr(**attributes, &block); end
end

# source://phlex//lib/phlex/html.rb#9
Phlex::HTML::UNBUFFERED_MUTEX = T.let(T.unsafe(nil), Thread::Mutex)

# Void HTML elements don't accept content and never have a closing tag.
#
# source://phlex//lib/phlex/html/void_elements.rb#4
module Phlex::HTML::VoidElements
  extend ::Phlex::Elements

  # source://phlex//lib/phlex/elements.rb#80
  def _area(**attributes); end

  # source://phlex//lib/phlex/elements.rb#80
  def _br(**attributes); end

  # source://phlex//lib/phlex/elements.rb#80
  def _col(**attributes); end

  # source://phlex//lib/phlex/elements.rb#80
  def _embed(**attributes); end

  # source://phlex//lib/phlex/elements.rb#80
  def _hr(**attributes); end

  # source://phlex//lib/phlex/elements.rb#80
  def _img(**attributes); end

  # source://phlex//lib/phlex/elements.rb#80
  def _input(**attributes); end

  # source://phlex//lib/phlex/elements.rb#80
  def _link(**attributes); end

  # source://phlex//lib/phlex/elements.rb#80
  def _meta(**attributes); end

  # source://phlex//lib/phlex/elements.rb#80
  def _param(**attributes); end

  # source://phlex//lib/phlex/elements.rb#80
  def _source(**attributes); end

  # source://phlex//lib/phlex/elements.rb#80
  def _track(**attributes); end

  # Outputs an `<area>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/area
  #
  # source://phlex//lib/phlex/elements.rb#80
  def area(**attributes); end

  # Outputs a `<br>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/br
  #
  # source://phlex//lib/phlex/elements.rb#80
  def br(**attributes); end

  # Outputs a `<col>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/col
  #
  # source://phlex//lib/phlex/elements.rb#80
  def col(**attributes); end

  # Outputs an `<embed>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/embed
  #
  # source://phlex//lib/phlex/elements.rb#80
  def embed(**attributes); end

  # Outputs an `<hr>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/hr
  #
  # source://phlex//lib/phlex/elements.rb#80
  def hr(**attributes); end

  # Outputs an `<img>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/img
  #
  # source://phlex//lib/phlex/elements.rb#80
  def img(**attributes); end

  # Outputs an `<input>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/input
  #
  # source://phlex//lib/phlex/elements.rb#80
  def input(**attributes); end

  # Outputs a `<link>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/link
  #
  # source://phlex//lib/phlex/elements.rb#80
  def link(**attributes); end

  # Outputs a `<meta>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/meta
  #
  # source://phlex//lib/phlex/elements.rb#80
  def meta(**attributes); end

  # Outputs a `<param>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/param
  #
  # source://phlex//lib/phlex/elements.rb#80
  def param(**attributes); end

  # Outputs a `<source>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/source
  #
  # source://phlex//lib/phlex/elements.rb#80
  def source(**attributes); end

  # Outputs a `<track>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/HTML/Element/track
  #
  # source://phlex//lib/phlex/elements.rb#80
  def track(**attributes); end
end

# source://phlex//lib/phlex/helpers.rb#7
module Phlex::Helpers
  private

  # @api private
  #
  # source://phlex//lib/phlex/helpers.rb#52
  def __append_token__(tokens, token); end

  # Like {#tokens} but returns a {Hash} where the tokens are the value for `:class`.
  #
  # @return [Hash]
  #
  # source://phlex//lib/phlex/helpers.rb#65
  def classes(*tokens, **conditional_tokens); end

  # @return [Hash]
  #
  # source://phlex//lib/phlex/helpers.rb#76
  def mix(*args); end

  # Tokens
  #
  # @example With Proc conditions
  #   tokens(
  #   -> { true } => "a",
  #   -> { false } => "b"
  #   )
  # @example With method conditions
  #   tokens(
  #   active?: "active"
  #   )
  # @example With else condition
  #   tokens(
  #   active?: { then: "active", else: "inactive" }
  #   )
  # @return [String]
  #
  # source://phlex//lib/phlex/helpers.rb#25
  def tokens(*tokens, **conditional_tokens); end
end

# @api private
#
# source://phlex//lib/phlex.rb#24
Phlex::Loader = T.let(T.unsafe(nil), Zeitwerk::GemLoader)

# A specialised NameError for Phlex.
#
# source://phlex//lib/phlex.rb#19
class Phlex::NameError < ::NameError
  include ::Phlex::Error
end

# @api private
#
# source://phlex//lib/phlex/overrides/symbol/name.rb#4
module Phlex::Overrides::Symbol::Name; end

# **Standard Generalized Markup Language** for behaviour common to {HTML} and {SVG}.
#
# source://phlex//lib/phlex/sgml.rb#9
class Phlex::SGML
  # @api private
  #
  # source://phlex//lib/phlex/sgml.rb#97
  def __final_call__(buffer = T.unsafe(nil), context: T.unsafe(nil), view_context: T.unsafe(nil), parent: T.unsafe(nil), &block); end

  # @api private
  #
  # source://phlex//lib/phlex/sgml.rb#75
  def await(task); end

  # Renders the view and returns the buffer. The default buffer is a mutable String.
  #
  # source://phlex//lib/phlex/sgml.rb#90
  def call(buffer = T.unsafe(nil), context: T.unsafe(nil), view_context: T.unsafe(nil), parent: T.unsafe(nil), &block); end

  # Capture a block of output as a String.
  #
  # @note This only works if the block's receiver is the current component or the block returns a String.
  # @return [String]
  #
  # source://phlex//lib/phlex/sgml.rb#182
  def capture(&block); end

  # Output an HTML comment.
  #
  # @return [nil]
  #
  # source://phlex//lib/phlex/sgml.rb#159
  def comment(&block); end

  # Output text content. The text will be HTML-escaped.
  #
  # @param content [String, Symbol, Integer, void] the content to be output on the buffer. Strings, Symbols, and Integers are handled by `plain` directly, but any object can be handled by overriding `format_object`
  # @return [nil]
  # @see #format_object
  #
  # source://phlex//lib/phlex/sgml.rb#133
  def plain(content); end

  # @abstract Override to define a template for your component.
  # @example
  #   def template
  #   h1 { "👋 Hello World!" }
  #   end
  # @example Your template may yield a content block.
  #   def template
  #   main {
  #   h1 { "Hello World" }
  #   yield
  #   }
  #   end
  # @example Alternatively, you can delegate the content block to an element.
  #   def template(&block)
  #   article(class: "card", &block)
  #   end
  #
  # source://phlex//lib/phlex/sgml.rb#70
  def template; end

  # This method is very dangerous and should usually be avoided. It will output the given String without any HTML safety. You should never use this method to output unsafe user input.
  #
  # @param content [String|nil]
  # @return [nil]
  #
  # source://phlex//lib/phlex/sgml.rb#172
  def unsafe_raw(content = T.unsafe(nil)); end

  # Output a whitespace character. This is useful for getting inline elements to wrap. If you pass a block, a whitespace will be output before and after yielding the block.
  #
  # @return [nil]
  # @yield If a block is given, it yields the block with no arguments.
  #
  # source://phlex//lib/phlex/sgml.rb#144
  def whitespace; end

  private

  # @api private
  #
  # source://phlex//lib/phlex/sgml.rb#355
  def __attributes__(**attributes); end

  # @api private
  #
  # source://phlex//lib/phlex/sgml.rb#382
  def __build_attributes__(attributes, buffer:); end

  # @api private
  #
  # source://phlex//lib/phlex/sgml.rb#362
  def __final_attributes__(**attributes); end

  # Performs the same task as the public method #plain, but does not raise an error if an unformattable object is passed
  #
  # @api private
  #
  # source://phlex//lib/phlex/sgml.rb#333
  def __text__(content); end

  # Like {#capture} but the output is vanished into a BlackHole buffer.
  # Because the BlackHole does nothing with the output, this should be faster.
  #
  # @api private
  # @return [nil]
  #
  # source://phlex//lib/phlex/sgml.rb#240
  def __vanish__(*args); end

  # @abstract Override this method to hook in right after a template is rendered. Please remember to call `super` so that callbacks can be added at different layers of the inheritance tree.
  # @return [nil]
  #
  # source://phlex//lib/phlex/sgml.rb#283
  def after_template; end

  # @abstract Override this method to hook in around a template render. You can do things before and after calling `super` to render the template. You should always call `super` so that callbacks can be added at different layers of the inheritance tree.
  # @return [nil]
  #
  # source://phlex//lib/phlex/sgml.rb#267
  def around_template; end

  # @abstract Override this method to hook in right before a template is rendered. Please remember to call `super` so that callbacks can be added at different layers of the inheritance tree.
  # @return [nil]
  #
  # source://phlex//lib/phlex/sgml.rb#277
  def before_template; end

  # @api private
  #
  # source://phlex//lib/phlex/sgml.rb#191
  def flush; end

  # Format the object for output
  #
  # @abstract Override to define your own format handling for different object types. Please remember to call `super` in the case that the passed object doesn't match, so that object formatting can be added at different layers of the inheritance tree.
  # @return [String]
  #
  # source://phlex//lib/phlex/sgml.rb#258
  def format_object(object); end

  # Render another component, block or enumerable
  #
  # @overload render
  # @overload render
  # @overload render
  # @overload render
  # @return [nil]
  #
  # source://phlex//lib/phlex/sgml.rb#213
  def render(renderable, &block); end

  # Determines if the component should render. By default, it returns `true`.
  #
  # @abstract Override to define your own predicate to prevent rendering.
  # @return [Boolean]
  #
  # source://phlex//lib/phlex/sgml.rb#251
  def render?; end

  # Yields the block and checks if it buffered anything. If nothing was buffered, the return value is treated as text. The text is always HTML-escaped.
  #
  # @return [nil]
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/sgml.rb#290
  def yield_content; end

  # Same as {#yield_content} but accepts a splat of arguments to yield. This is slightly slower than {#yield_content}.
  #
  # @return [nil]
  # @yield [*args] Yields the given arguments.
  #
  # source://phlex//lib/phlex/sgml.rb#319
  def yield_content_with_args(*args); end

  # Same as {#yield_content} but yields no arguments.
  #
  # @yield Yields the block with no arguments.
  #
  # source://phlex//lib/phlex/sgml.rb#304
  def yield_content_with_no_args; end

  class << self
    # Render the view to a String. Arguments are delegated to {.new}.
    #
    # source://phlex//lib/phlex/sgml.rb#12
    def call(*_arg0, **_arg1, &_arg2); end

    # @api private
    # @return [Boolean]
    #
    # source://phlex//lib/phlex/sgml.rb#35
    def element_method?(method_name); end

    # Create a new instance of the component.
    #
    # @note The block will not be delegated {#initialize}. Instead, it will be sent to {#template} when rendering.
    #
    # source://phlex//lib/phlex/sgml.rb#18
    def new(*args, **kwargs, &block); end

    # @api private
    #
    # source://phlex//lib/phlex/sgml.rb#29
    def rendered_at_least_once!; end
  end
end

# source://phlex//lib/phlex/svg.rb#4
class Phlex::SVG < ::Phlex::SGML
  include ::Phlex::SVG::StandardElements
  extend ::Phlex::ElementClobberingGuard
end

# source://phlex//lib/phlex/svg/standard_elements.rb#3
module Phlex::SVG::StandardElements
  extend ::Phlex::Elements

  # source://phlex//lib/phlex/elements.rb#41
  def _a(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _animate(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _animateMotion(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _animateTransform(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _circle(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _clipPath(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _defs(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _desc(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _discard(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _ellipse(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _feBlend(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _feColorMatrix(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _feComponentTransfer(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _feComposite(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _feConvolveMatrix(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _feDiffuseLighting(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _feDisplacementMap(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _feDistantLight(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _feDropShadow(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _feFlood(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _feFuncA(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _feFuncB(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _feFuncG(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _feFuncR(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _feGaussianBlur(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _feImage(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _feMerge(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _feMergeNode(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _feMorphology(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _feOffset(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _fePointLight(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _feSpecularLighting(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _feSpotLight(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _feTile(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _feTurbulence(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _filter(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _foreignObject(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _g(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _image(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _line(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _linearGradient(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _marker(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _mask(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _metadata(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _mpath(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _path(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _pattern(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _polygon(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _polyline(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _radialGradient(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _rect(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _script(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _set(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _stop(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _style(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _svg(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _switch(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _symbol(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _text(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _textPath(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _title(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _tspan(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _use(**attributes, &block); end

  # source://phlex//lib/phlex/elements.rb#41
  def _view(**attributes, &block); end

  # Outputs an `<a>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/a
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def a(**attributes, &block); end

  # Outputs an `<animate>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/animate
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def animate(**attributes, &block); end

  # Outputs an `<animateMotion>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/animateMotion
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def animateMotion(**attributes, &block); end

  # Outputs an `<animateTransform>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/animateTransform
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def animateTransform(**attributes, &block); end

  # Outputs a `<circle>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/circle
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def circle(**attributes, &block); end

  # Outputs a `<clipPath>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/clipPath
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def clipPath(**attributes, &block); end

  # Outputs a `<defs>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/defs
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def defs(**attributes, &block); end

  # Outputs a `<desc>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/desc
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def desc(**attributes, &block); end

  # Outputs a `<discard>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/discard
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def discard(**attributes, &block); end

  # Outputs an `<ellipse>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/ellipse
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def ellipse(**attributes, &block); end

  # Outputs a `<feBlend>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feBlend
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def feBlend(**attributes, &block); end

  # Outputs a `<feColorMatrix>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feColorMatrix
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def feColorMatrix(**attributes, &block); end

  # Outputs a `<feComponentTransfer>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feComponentTransfer
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def feComponentTransfer(**attributes, &block); end

  # Outputs a `<feComposite>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feComposite
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def feComposite(**attributes, &block); end

  # Outputs a `<feConvolveMatrix>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feConvolveMatrix
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def feConvolveMatrix(**attributes, &block); end

  # Outputs a `<feDiffuseLighting>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feDiffuseLighting
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def feDiffuseLighting(**attributes, &block); end

  # Outputs a `<feDisplacementMap>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feDisplacementMap
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def feDisplacementMap(**attributes, &block); end

  # Outputs a `<feDistantLight>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feDistantLight
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def feDistantLight(**attributes, &block); end

  # Outputs a `<feDropShadow>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feDropShadow
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def feDropShadow(**attributes, &block); end

  # Outputs a `<feFlood>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feFlood
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def feFlood(**attributes, &block); end

  # Outputs a `<feFuncA>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feFuncA
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def feFuncA(**attributes, &block); end

  # Outputs a `<feFuncB>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feFuncB
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def feFuncB(**attributes, &block); end

  # Outputs a `<feFuncG>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feFuncG
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def feFuncG(**attributes, &block); end

  # Outputs a `<feFuncR>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feFuncR
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def feFuncR(**attributes, &block); end

  # Outputs a `<feGaussianBlur>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feGaussianBlur
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def feGaussianBlur(**attributes, &block); end

  # Outputs a `<feImage>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feImage
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def feImage(**attributes, &block); end

  # Outputs a `<feMerge>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feMerge
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def feMerge(**attributes, &block); end

  # Outputs a `<feMergeNode>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feMergeNode
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def feMergeNode(**attributes, &block); end

  # Outputs a `<feMorphology>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feMorphology
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def feMorphology(**attributes, &block); end

  # Outputs a `<feOffset>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feOffset
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def feOffset(**attributes, &block); end

  # Outputs a `<fePointLight>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/fePointLight
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def fePointLight(**attributes, &block); end

  # Outputs a `<feSpecularLighting>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feSpecularLighting
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def feSpecularLighting(**attributes, &block); end

  # Outputs a `<feSpotLight>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feSpotLight
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def feSpotLight(**attributes, &block); end

  # Outputs a `<feTile>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feTile
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def feTile(**attributes, &block); end

  # Outputs a `<feTurbulence>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/feTurbulence
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def feTurbulence(**attributes, &block); end

  # Outputs a `<filter>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/filter
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def filter(**attributes, &block); end

  # Outputs a `<foreignObject>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/foreignObject
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def foreignObject(**attributes, &block); end

  # Outputs a `<g>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/g
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def g(**attributes, &block); end

  # Outputs an `<image>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/image
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def image(**attributes, &block); end

  # Outputs a `<line>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/line
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def line(**attributes, &block); end

  # Outputs a `<linearGradient>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/linearGradient
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def linearGradient(**attributes, &block); end

  # Outputs a `<marker>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/marker
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def marker(**attributes, &block); end

  # Outputs a `<mask>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/mask
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def mask(**attributes, &block); end

  # Outputs a `<metadata>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/metadata
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def metadata(**attributes, &block); end

  # Outputs an `<mpath>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/mpath
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def mpath(**attributes, &block); end

  # Outputs a `<path>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/path
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def path(**attributes, &block); end

  # Outputs a `<pattern>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/pattern
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def pattern(**attributes, &block); end

  # Outputs a `<polygon>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/polygon
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def polygon(**attributes, &block); end

  # Outputs a `<polyline>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/polyline
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def polyline(**attributes, &block); end

  # Outputs a `<radialGradient>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/radialGradient
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def radialGradient(**attributes, &block); end

  # Outputs a `<rect>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/rect
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def rect(**attributes, &block); end

  # Outputs a `<script>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/script
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def script(**attributes, &block); end

  # Outputs a `<set>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/set
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def set(**attributes, &block); end

  # Outputs a `<stop>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/stop
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def stop(**attributes, &block); end

  # Outputs a `<style>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/style
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def style(**attributes, &block); end

  # Outputs an `<svg>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/svg
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def svg(**attributes, &block); end

  # Outputs a `<switch>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/switch
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def switch(**attributes, &block); end

  # Outputs a `<symbol>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/symbol
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def symbol(**attributes, &block); end

  # Outputs a `<text>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/text
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def text(**attributes, &block); end

  # Outputs a `<textPath>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/textPath
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def textPath(**attributes, &block); end

  # Outputs a `<title>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/title
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def title(**attributes, &block); end

  # Outputs a `<tspan>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/tspan
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def tspan(**attributes, &block); end

  # Outputs a `<use>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/use
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def use(**attributes, &block); end

  # Outputs a `<view>` tag.
  #
  # @return [nil]
  # @see https://developer.mozilla.org/docs/Web/SVG/Element/view
  # @yieldparam component [self]
  #
  # source://phlex//lib/phlex/elements.rb#41
  def view(**attributes, &block); end
end

# @api private
#
# source://phlex//lib/phlex/unbuffered.rb#4
class Phlex::Unbuffered < ::BasicObject
  # @api private
  # @return [Unbuffered] a new instance of Unbuffered
  #
  # source://phlex//lib/phlex/unbuffered.rb#5
  def initialize(object); end

  def __class__; end
  def __public_send__(*_arg0); end

  # Forward some methods to the original underlying method
  #
  # @api private
  #
  # source://phlex//lib/phlex/unbuffered.rb#39
  def call(*_arg0, **_arg1, &_arg2); end

  # @api private
  #
  # source://phlex//lib/phlex/unbuffered.rb#9
  def inspect; end

  # @api private
  #
  # source://phlex//lib/phlex/unbuffered.rb#24
  def method_missing(name, *args, **kwargs, &block); end

  # @api private
  #
  # source://phlex//lib/phlex/unbuffered.rb#47
  def public_send(*_arg0, **_arg1, &_arg2); end

  # @api private
  #
  # source://phlex//lib/phlex/unbuffered.rb#43
  def send(*_arg0, **_arg1, &_arg2); end

  private

  # @api private
  # @return [Boolean]
  #
  # source://phlex//lib/phlex/unbuffered.rb#20
  def respond_to_missing?(*_arg0, **_arg1, &_arg2); end
end

# source://phlex//lib/phlex/version.rb#4
Phlex::VERSION = T.let(T.unsafe(nil), String)
