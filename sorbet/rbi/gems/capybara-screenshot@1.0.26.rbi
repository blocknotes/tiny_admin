# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `capybara-screenshot` gem.
# Please instead update this file by running `bin/tapioca gem capybara-screenshot`.

# source://capybara-screenshot//lib/capybara-screenshot.rb#1
module Capybara
  class << self
    # source://capybara/3.38.0/lib/capybara.rb#389
    def HTML(html); end

    # source://capybara/3.38.0/lib/capybara.rb#182
    def add_selector(name, **options, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def allow_gumbo(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def allow_gumbo=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def always_include_port(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def always_include_port=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def app(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def app=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def app_host(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def app_host=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def asset_host(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def asset_host=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def automatic_label_click(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def automatic_label_click=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def automatic_reload(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def automatic_reload=(*args, **_arg1, &block); end

    # source://capybara/3.38.0/lib/capybara.rb#114
    def configure; end

    # source://capybara/3.38.0/lib/capybara.rb#261
    def current_driver; end

    # source://capybara/3.38.0/lib/capybara.rb#270
    def current_driver=(name); end

    # source://capybara/3.38.0/lib/capybara.rb#316
    def current_session; end

    # source://forwardable/1.3.2/forwardable.rb#229
    def default_driver(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def default_driver=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def default_host(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def default_host=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def default_max_wait_time(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def default_max_wait_time=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def default_normalize_ws(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def default_normalize_ws=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def default_retry_interval(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def default_retry_interval=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def default_selector(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def default_selector=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def default_set_options(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def default_set_options=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def disable_animation(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def disable_animation=(*args, **_arg1, &block); end

    # source://capybara/3.38.0/lib/capybara.rb#204
    def drivers; end

    # source://forwardable/1.3.2/forwardable.rb#229
    def enable_aria_label(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def enable_aria_label=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def enable_aria_role(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def enable_aria_role=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def exact(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def exact=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def exact_text(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def exact_text=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def ignore_hidden_elements(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def ignore_hidden_elements=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def javascript_driver(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def javascript_driver=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def match(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def match=(*args, **_arg1, &block); end

    # source://capybara/3.38.0/lib/capybara.rb#261
    def mode; end

    # source://capybara/3.38.0/lib/capybara.rb#200
    def modify_selector(name, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def predicates_wait(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def predicates_wait=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def raise_server_errors(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def raise_server_errors=(*args, **_arg1, &block); end

    # source://capybara/3.38.0/lib/capybara.rb#131
    def register_driver(name, &block); end

    # source://capybara/3.38.0/lib/capybara.rb#150
    def register_server(name, &block); end

    # source://capybara/3.38.0/lib/capybara.rb#325
    def reset!; end

    # source://capybara/3.38.0/lib/capybara.rb#325
    def reset_sessions!; end

    # source://forwardable/1.3.2/forwardable.rb#229
    def reuse_server(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def reuse_server=(*args, **_arg1, &block); end

    # source://capybara/3.38.0/lib/capybara.rb#253
    def run_default_server(app, port); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def run_server(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def run_server=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def save_path(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def save_path=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def server(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def server=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def server_errors(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def server_errors=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def server_host(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def server_host=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def server_port(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def server_port=(*args, **_arg1, &block); end

    # source://capybara/3.38.0/lib/capybara.rb#208
    def servers; end

    # source://capybara/3.38.0/lib/capybara.rb#337
    def session_name; end

    # source://capybara/3.38.0/lib/capybara.rb#345
    def session_name=(name); end

    # source://capybara/3.38.0/lib/capybara.rb#409
    def session_options; end

    # source://capybara/3.38.0/lib/capybara.rb#240
    def string(html); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def test_id(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def test_id=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def threadsafe(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def threadsafe=(*args, **_arg1, &block); end

    # source://capybara/3.38.0/lib/capybara.rb#282
    def use_default_driver; end

    # source://forwardable/1.3.2/forwardable.rb#229
    def use_html5_parsing(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def use_html5_parsing=(*args, **_arg1, &block); end

    # source://capybara/3.38.0/lib/capybara.rb#290
    def using_driver(driver); end

    # source://capybara-screenshot//lib/capybara-screenshot/capybara.rb#4
    def using_session(name, &block); end

    # source://capybara-screenshot//lib/capybara-screenshot/capybara.rb#4
    def using_session_with_screenshot(name, &block); end

    # source://capybara/3.38.0/lib/capybara.rb#302
    def using_wait_time(seconds); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def visible_text_only(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def visible_text_only=(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def w3c_click_offset(*args, **_arg1, &block); end

    # source://forwardable/1.3.2/forwardable.rb#229
    def w3c_click_offset=(*args, **_arg1, &block); end

    private

    # source://capybara/3.38.0/lib/capybara.rb#415
    def config; end

    # source://capybara/3.38.0/lib/capybara.rb#419
    def session_pool; end

    # source://capybara/3.38.0/lib/capybara.rb#425
    def specified_session; end

    # source://capybara/3.38.0/lib/capybara.rb#433
    def specified_session=(session); end
  end
end

# source://capybara-screenshot//lib/capybara-screenshot/capybara.rb#18
module Capybara::DSL
  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def accept_alert(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def accept_confirm(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def accept_prompt(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def all(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def assert_all_of_selectors(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def assert_any_of_selectors(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def assert_current_path(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def assert_no_current_path(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def assert_no_selector(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def assert_no_text(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def assert_no_title(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def assert_none_of_selectors(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def assert_selector(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def assert_text(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def assert_title(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def attach_file(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def body(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def check(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def choose(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def click(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def click_button(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def click_link(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def click_link_or_button(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def click_on(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def current_host(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def current_path(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def current_scope(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def current_url(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def current_window(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def dismiss_confirm(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def dismiss_prompt(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def double_click(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def evaluate_async_script(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def evaluate_script(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def execute_script(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def fill_in(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def find(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def find_all(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def find_button(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def find_by_id(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def find_field(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def find_link(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def first(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def go_back(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def go_forward(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_button?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_checked_field?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_content?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_css?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_current_path?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_field?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_link?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_no_button?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_no_checked_field?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_no_content?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_no_css?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_no_current_path?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_no_field?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_no_link?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_no_select?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_no_selector?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_no_table?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_no_text?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_no_title?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_no_unchecked_field?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_no_xpath?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_select?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_selector?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_table?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_text?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_title?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_unchecked_field?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def has_xpath?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def html(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def open_new_window(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#45
  def page; end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def query(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def refresh(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def refute_selector(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def reset_session!(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def response_headers(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def right_click(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def save_and_open_page(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def save_and_open_screenshot(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def save_page(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def save_screenshot(*_arg0, **_arg1, &_arg2); end

  # source://capybara-screenshot//lib/capybara-screenshot/capybara.rb#26
  def screenshot_and_open_image; end

  # Adds class methods to Capybara module and gets mixed into
  # the current scope during Cucumber and RSpec tests
  #
  # source://capybara-screenshot//lib/capybara-screenshot/capybara.rb#22
  def screenshot_and_save_page; end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def scroll_by(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def scroll_to(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def select(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def send_keys(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def source(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def status_code(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def switch_to_frame(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def switch_to_window(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def text(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def title(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def uncheck(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def unselect(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#21
  def using_session(name_or_session, &block); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#27
  def using_wait_time(seconds, &block); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def visit(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def window_opened_by(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def windows(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def within(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def within_element(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def within_fieldset(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def within_frame(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def within_table(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/dsl.rb#51
  def within_window(*_arg0, **_arg1, &_arg2); end

  class << self
    # source://capybara/3.38.0/lib/capybara/dsl.rb#12
    def extended(base); end

    # source://capybara/3.38.0/lib/capybara/dsl.rb#7
    def included(base); end
  end
end

# source://capybara-screenshot//lib/capybara-screenshot.rb#2
module Capybara::Screenshot
  class << self
    # source://capybara-screenshot//lib/capybara-screenshot.rb#108
    def after_save_html(&block); end

    # source://capybara-screenshot//lib/capybara-screenshot.rb#112
    def after_save_screenshot(&block); end

    # Returns the value of attribute append_random.
    #
    # source://capybara-screenshot//lib/capybara-screenshot.rb#8
    def append_random; end

    # Sets the attribute append_random
    #
    # @param value the value to set the attribute append_random to.
    #
    # source://capybara-screenshot//lib/capybara-screenshot.rb#8
    def append_random=(_arg0); end

    # source://capybara-screenshot//lib/capybara-screenshot.rb#26
    def append_screenshot_path=(value); end

    # Returns the value of attribute append_timestamp.
    #
    # source://capybara-screenshot//lib/capybara-screenshot.rb#7
    def append_timestamp; end

    # Sets the attribute append_timestamp
    #
    # @param value the value to set the attribute append_timestamp to.
    #
    # source://capybara-screenshot//lib/capybara-screenshot.rb#7
    def append_timestamp=(_arg0); end

    # Returns the value of attribute autosave_on_failure.
    #
    # source://capybara-screenshot//lib/capybara-screenshot.rb#4
    def autosave_on_failure; end

    # Sets the attribute autosave_on_failure
    #
    # @param value the value to set the attribute autosave_on_failure to.
    #
    # source://capybara-screenshot//lib/capybara-screenshot.rb#4
    def autosave_on_failure=(_arg0); end

    # source://capybara-screenshot//lib/capybara-screenshot.rb#60
    def capybara_root; end

    # If the path isn't set, default to the current directory
    #
    # source://capybara-screenshot//lib/capybara-screenshot.rb#119
    def capybara_tmp_path; end

    # Configure the path unless '.'
    #
    # source://capybara-screenshot//lib/capybara-screenshot.rb#130
    def capybara_tmp_path=(path); end

    # source://capybara-screenshot//lib/capybara-screenshot.rb#54
    def filename_prefix_for(test_type, test); end

    # Returns the value of attribute filename_prefix_formatters.
    #
    # source://capybara-screenshot//lib/capybara-screenshot.rb#6
    def filename_prefix_formatters; end

    # Sets the attribute filename_prefix_formatters
    #
    # @param value the value to set the attribute filename_prefix_formatters to.
    #
    # source://capybara-screenshot//lib/capybara-screenshot.rb#6
    def filename_prefix_formatters=(_arg0); end

    # source://capybara-screenshot//lib/capybara-screenshot.rb#80
    def final_session_name; end

    # Sets the attribute final_session_name
    #
    # @param value the value to set the attribute final_session_name to.
    #
    # source://capybara-screenshot//lib/capybara-screenshot.rb#10
    def final_session_name=(_arg0); end

    # source://capybara-screenshot//lib/capybara-screenshot.rb#97
    def new_saver(*args); end

    # Prune screenshots based on prune_strategy
    # Will run only once unless force:true
    #
    # source://capybara-screenshot//lib/capybara-screenshot.rb#86
    def prune(options = T.unsafe(nil)); end

    # Returns the value of attribute prune_strategy.
    #
    # source://capybara-screenshot//lib/capybara-screenshot.rb#11
    def prune_strategy; end

    # Sets the attribute prune_strategy
    #
    # @param value the value to set the attribute prune_strategy to.
    #
    # source://capybara-screenshot//lib/capybara-screenshot.rb#11
    def prune_strategy=(_arg0); end

    # source://capybara-screenshot//lib/capybara-screenshot.rb#72
    def register_driver(driver, &block); end

    # source://capybara-screenshot//lib/capybara-screenshot.rb#76
    def register_filename_prefix_formatter(test_type, &block); end

    # Returns the value of attribute registered_drivers.
    #
    # source://capybara-screenshot//lib/capybara-screenshot.rb#5
    def registered_drivers; end

    # Sets the attribute registered_drivers
    #
    # @param value the value to set the attribute registered_drivers to.
    #
    # source://capybara-screenshot//lib/capybara-screenshot.rb#5
    def registered_drivers=(_arg0); end

    # Reset prune history allowing further prunining on next failure
    #
    # source://capybara-screenshot//lib/capybara-screenshot.rb#93
    def reset_prune_history; end

    # Returns the value of attribute s3_configuration.
    #
    # source://capybara-screenshot//lib/capybara-screenshot.rb#12
    def s3_configuration; end

    # Sets the attribute s3_configuration
    #
    # @param value the value to set the attribute s3_configuration to.
    #
    # source://capybara-screenshot//lib/capybara-screenshot.rb#12
    def s3_configuration=(_arg0); end

    # Returns the value of attribute s3_object_configuration.
    #
    # source://capybara-screenshot//lib/capybara-screenshot.rb#13
    def s3_object_configuration; end

    # Sets the attribute s3_object_configuration
    #
    # @param value the value to set the attribute s3_object_configuration to.
    #
    # source://capybara-screenshot//lib/capybara-screenshot.rb#13
    def s3_object_configuration=(_arg0); end

    # source://capybara-screenshot//lib/capybara-screenshot.rb#39
    def screen_shot_and_open_image; end

    # source://capybara-screenshot//lib/capybara-screenshot.rb#32
    def screen_shot_and_save_page; end

    # source://capybara-screenshot//lib/capybara-screenshot.rb#39
    def screenshot_and_open_image; end

    # source://capybara-screenshot//lib/capybara-screenshot.rb#32
    def screenshot_and_save_page; end

    # Returns the value of attribute webkit_options.
    #
    # source://capybara-screenshot//lib/capybara-screenshot.rb#9
    def webkit_options; end

    # Sets the attribute webkit_options
    #
    # @param value the value to set the attribute webkit_options to.
    #
    # source://capybara-screenshot//lib/capybara-screenshot.rb#9
    def webkit_options=(_arg0); end
  end
end

# source://capybara-screenshot//lib/capybara-screenshot/callbacks.rb#3
module Capybara::Screenshot::Callbacks
  include ::Capybara::Screenshot::Callbacks::InstanceMethods

  mixes_in_class_methods ::Capybara::Screenshot::Callbacks::ClassMethods

  class << self
    # @private
    #
    # source://capybara-screenshot//lib/capybara-screenshot/callbacks.rb#38
    def included(receiver); end
  end
end

# source://capybara-screenshot//lib/capybara-screenshot/callbacks.rb#4
class Capybara::Screenshot::Callbacks::CallbackSet < ::Array
  # source://capybara-screenshot//lib/capybara-screenshot/callbacks.rb#5
  def call(*args); end
end

# source://capybara-screenshot//lib/capybara-screenshot/callbacks.rb#12
module Capybara::Screenshot::Callbacks::ClassMethods
  # source://capybara-screenshot//lib/capybara-screenshot/callbacks.rb#13
  def callbacks; end

  # source://capybara-screenshot//lib/capybara-screenshot/callbacks.rb#17
  def define_callback(name); end

  # source://capybara-screenshot//lib/capybara-screenshot/callbacks.rb#25
  def run_callbacks(name, *args); end
end

# source://capybara-screenshot//lib/capybara-screenshot/callbacks.rb#32
module Capybara::Screenshot::Callbacks::InstanceMethods
  # source://capybara-screenshot//lib/capybara-screenshot/callbacks.rb#33
  def run_callbacks(name, *args); end
end

# source://capybara-screenshot//lib/capybara-screenshot/pruner.rb#3
class Capybara::Screenshot::Pruner
  # @return [Pruner] a new instance of Pruner
  #
  # source://capybara-screenshot//lib/capybara-screenshot/pruner.rb#6
  def initialize(strategy); end

  # source://capybara-screenshot//lib/capybara-screenshot/pruner.rb#24
  def prune_old_screenshots; end

  # Returns the value of attribute strategy.
  #
  # source://capybara-screenshot//lib/capybara-screenshot/pruner.rb#4
  def strategy; end

  private

  # source://capybara-screenshot//lib/capybara-screenshot/pruner.rb#38
  def prune_with_last_run_strategy; end

  # source://capybara-screenshot//lib/capybara-screenshot/pruner.rb#42
  def prune_with_numeric_strategy(count); end

  # source://capybara-screenshot//lib/capybara-screenshot/pruner.rb#30
  def strategy_proc; end

  # source://capybara-screenshot//lib/capybara-screenshot/pruner.rb#34
  def wildcard_path; end
end

# source://capybara-screenshot//lib/capybara-screenshot/saver.rb#6
class Capybara::Screenshot::Saver
  include ::Capybara::Screenshot::Callbacks
  include ::Capybara::Screenshot::Callbacks::InstanceMethods
  extend ::Capybara::Screenshot::Callbacks::ClassMethods

  # @return [Saver] a new instance of Saver
  #
  # source://capybara-screenshot//lib/capybara-screenshot/saver.rb#14
  def initialize(capybara, page, html_save = T.unsafe(nil), filename_prefix = T.unsafe(nil)); end

  # Returns the value of attribute capybara.
  #
  # source://capybara-screenshot//lib/capybara-screenshot/saver.rb#12
  def capybara; end

  # If Capybara::Screenshot.capybara_tmp_path is set then
  # the html_path or screenshot_path can be appended to this path in
  # some versions of Capybara instead of using it as an absolute path
  #
  # source://capybara-screenshot//lib/capybara-screenshot/saver.rb#94
  def clear_save_path; end

  # Print image to screen, if imgcat is available
  #
  # source://capybara-screenshot//lib/capybara-screenshot/saver.rb#108
  def display_image; end

  # Returns the value of attribute file_base_name.
  #
  # source://capybara-screenshot//lib/capybara-screenshot/saver.rb#12
  def file_base_name; end

  # source://capybara-screenshot//lib/capybara-screenshot/saver.rb#75
  def html_path; end

  # @return [Boolean]
  #
  # source://capybara-screenshot//lib/capybara-screenshot/saver.rb#83
  def html_saved?; end

  # source://capybara-screenshot//lib/capybara-screenshot/saver.rb#102
  def output_screenshot_path; end

  # Returns the value of attribute page.
  #
  # source://capybara-screenshot//lib/capybara-screenshot/saver.rb#12
  def page; end

  # source://capybara-screenshot//lib/capybara-screenshot/saver.rb#28
  def save; end

  # source://capybara-screenshot//lib/capybara-screenshot/saver.rb#50
  def save_html; end

  # source://capybara-screenshot//lib/capybara-screenshot/saver.rb#63
  def save_screenshot; end

  # source://capybara-screenshot//lib/capybara-screenshot/saver.rb#79
  def screenshot_path; end

  # @return [Boolean]
  #
  # source://capybara-screenshot//lib/capybara-screenshot/saver.rb#87
  def screenshot_saved?; end

  private

  # @yield [path]
  #
  # source://capybara-screenshot//lib/capybara-screenshot/saver.rb#114
  def current_path; end

  # source://capybara-screenshot//lib/capybara-screenshot/saver.rb#128
  def imgcat; end

  # source://capybara-screenshot//lib/capybara-screenshot/saver.rb#124
  def output(message); end

  # Cross-platform way of finding an executable in the $PATH.
  #
  #   which('ruby') #=> /usr/bin/ruby
  #
  # source://capybara-screenshot//lib/capybara-screenshot/saver.rb#135
  def which(cmd); end

  # source://capybara-screenshot//lib/capybara-screenshot/saver.rb#148
  def within_offending_window; end

  class << self
    # source://capybara-screenshot//lib/capybara-screenshot/callbacks.rb#20
    def after_save_html(&block); end

    # source://capybara-screenshot//lib/capybara-screenshot/callbacks.rb#20
    def after_save_screenshot(&block); end
  end
end

class Capybara::Session
  include ::Capybara::SessionScreenshotOverrides

  # source://capybara/3.38.0/lib/capybara/session.rb#78
  def initialize(mode, app = T.unsafe(nil)); end

  # source://capybara/3.38.0/lib/capybara/session.rb#658
  def accept_alert(text = T.unsafe(nil), **options, &blk); end

  # source://capybara/3.38.0/lib/capybara/session.rb#668
  def accept_confirm(text = T.unsafe(nil), **options, &blk); end

  # source://capybara/3.38.0/lib/capybara/session.rb#689
  def accept_prompt(text = T.unsafe(nil), **options, &blk); end

  # source://capybara/3.38.0/lib/capybara/session.rb#322
  def active_element; end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def all(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#75
  def app; end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def assert_all_of_selectors(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def assert_any_of_selectors(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def assert_no_selector(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def assert_no_text(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#780
  def assert_no_title(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def assert_none_of_selectors(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def assert_selector(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def assert_text(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#780
  def assert_title(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def attach_file(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#196
  def body; end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def check(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def choose(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#129
  def cleanup!; end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def click(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def click_button(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def click_link(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def click_link_or_button(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def click_on(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#828
  def config; end

  # source://capybara/3.38.0/lib/capybara/session.rb#818
  def configure; end

  # source://capybara/3.38.0/lib/capybara/session.rb#221
  def current_host; end

  # source://capybara/3.38.0/lib/capybara/session.rb#206
  def current_path; end

  # source://capybara/3.38.0/lib/capybara/session.rb#790
  def current_scope; end

  # source://capybara/3.38.0/lib/capybara/session.rb#230
  def current_url; end

  # source://capybara/3.38.0/lib/capybara/session.rb#459
  def current_window; end

  # source://capybara/3.38.0/lib/capybara/session.rb#678
  def dismiss_confirm(text = T.unsafe(nil), **options, &blk); end

  # source://capybara/3.38.0/lib/capybara/session.rb#699
  def dismiss_prompt(text = T.unsafe(nil), **options, &blk); end

  # source://capybara/3.38.0/lib/capybara/session.rb#765
  def document; end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def double_click(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#99
  def driver; end

  # source://capybara/3.38.0/lib/capybara/session.rb#632
  def evaluate_async_script(script, *args); end

  # source://capybara/3.38.0/lib/capybara/session.rb#618
  def evaluate_script(script, *args); end

  # source://capybara/3.38.0/lib/capybara/session.rb#603
  def execute_script(script, *args); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def fill_in(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def find(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def find_all(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def find_button(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def find_by_id(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def find_field(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def find_link(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def first(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#296
  def go_back; end

  # source://capybara/3.38.0/lib/capybara/session.rb#304
  def go_forward; end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def has_button?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def has_checked_field?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def has_content?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def has_css?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def has_field?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def has_link?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def has_no_button?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def has_no_checked_field?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def has_no_content?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def has_no_css?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def has_no_field?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def has_no_link?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def has_no_select?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def has_no_selector?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def has_no_table?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def has_no_text?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#780
  def has_no_title?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def has_no_unchecked_field?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def has_no_xpath?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def has_select?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def has_selector?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def has_table?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def has_text?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#780
  def has_title?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def has_unchecked_field?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def has_xpath?(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#196
  def html; end

  # source://capybara/3.38.0/lib/capybara/session.rb#786
  def inspect; end

  # source://capybara/3.38.0/lib/capybara/session.rb#75
  def mode; end

  # source://capybara/3.38.0/lib/capybara/session.rb#483
  def open_new_window(kind = T.unsafe(nil)); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def query(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#146
  def quit; end

  # source://capybara/3.38.0/lib/capybara/session.rb#157
  def raise_server_error!; end

  # source://capybara/3.38.0/lib/capybara/session.rb#287
  def refresh; end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def refute_selector(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#129
  def reset!; end

  # source://capybara/3.38.0/lib/capybara/session.rb#129
  def reset_session!; end

  # source://capybara/3.38.0/lib/capybara/session.rb#178
  def response_headers; end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def right_click(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#731
  def save_and_open_page(path = T.unsafe(nil)); end

  # source://capybara/3.38.0/lib/capybara/session.rb#761
  def save_and_open_screenshot(path = T.unsafe(nil), **options); end

  # source://capybara/3.38.0/lib/capybara/session.rb#715
  def save_page(path = T.unsafe(nil)); end

  # source://capybara/3.38.0/lib/capybara/session.rb#746
  def save_screenshot(path = T.unsafe(nil), **options); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def scroll_by(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def scroll_to(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def select(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#312
  def send_keys(*args, **kw_args); end

  # source://capybara/3.38.0/lib/capybara/session.rb#75
  def server; end

  # source://capybara/3.38.0/lib/capybara/session.rb#836
  def server_url; end

  # source://capybara/3.38.0/lib/capybara/session.rb#196
  def source; end

  # source://capybara/3.38.0/lib/capybara/session.rb#188
  def status_code; end

  # source://capybara/3.38.0/lib/capybara/session.rb#407
  def switch_to_frame(frame); end

  # source://capybara/3.38.0/lib/capybara/session.rb#511
  def switch_to_window(window = T.unsafe(nil), **options, &window_locator); end

  # source://capybara/3.38.0/lib/capybara/session.rb#76
  def synchronized; end

  # source://capybara/3.38.0/lib/capybara/session.rb#76
  def synchronized=(_arg0); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def text(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#780
  def title(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def uncheck(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#771
  def unselect(*_arg0, **_arg1, &_arg2); end

  # source://capybara/3.38.0/lib/capybara/session.rb#799
  def using_wait_time(seconds, &block); end

  # source://capybara/3.38.0/lib/capybara/session.rb#260
  def visit(visit_uri); end

  # source://capybara/3.38.0/lib/capybara/session.rb#580
  def window_opened_by(**options); end

  # source://capybara/3.38.0/lib/capybara/session.rb#470
  def windows; end

  # source://capybara/3.38.0/lib/capybara/session.rb#361
  def within(*args, **kw_args); end

  # source://capybara/3.38.0/lib/capybara/session.rb#361
  def within_element(*args, **kw_args); end

  # source://capybara/3.38.0/lib/capybara/session.rb#378
  def within_fieldset(locator, &block); end

  # source://capybara/3.38.0/lib/capybara/session.rb#447
  def within_frame(*args, **kw_args); end

  # source://capybara/3.38.0/lib/capybara/session.rb#388
  def within_table(locator, &block); end

  # source://capybara-screenshot//lib/capybara-screenshot/capybara.rb#32
  def within_window(window_or_handle); end

  private

  # source://capybara/3.38.0/lib/capybara/session.rb#901
  def _find_frame(*args, **kw_args); end

  # source://capybara/3.38.0/lib/capybara/session.rb#917
  def _switch_to_window(window = T.unsafe(nil), **options, &window_locator); end

  # source://capybara/3.38.0/lib/capybara/session.rb#937
  def _switch_to_window_by_locator; end

  # source://capybara/3.38.0/lib/capybara/session.rb#848
  def accept_modal(type, text_or_options, options, &blk); end

  # source://capybara/3.38.0/lib/capybara/session.rb#897
  def adjust_server_port(uri); end

  # source://capybara/3.38.0/lib/capybara/session.rb#875
  def default_fn(extension); end

  # source://capybara/3.38.0/lib/capybara/session.rb#852
  def dismiss_modal(type, text_or_options, options, &blk); end

  # source://capybara/3.38.0/lib/capybara/session.rb#844
  def driver_args(args); end

  # source://capybara/3.38.0/lib/capybara/session.rb#884
  def element_script_result(arg); end

  # source://capybara/3.38.0/lib/capybara/session.rb#856
  def modal_options(text = T.unsafe(nil), **options); end

  # source://capybara/3.38.0/lib/capybara/session.rb#862
  def open_file(path); end

  # source://capybara/3.38.0/lib/capybara/session.rb#869
  def prepare_path(path, extension); end

  # source://capybara/3.38.0/lib/capybara/session.rb#880
  def scopes; end

  # source://capybara/3.38.0/lib/capybara/session.rb#945
  def synchronize_windows(options, &block); end

  class << self
    # source://capybara/3.38.0/lib/capybara/session.rb#824
    def instance_created?; end
  end
end

# source://capybara-screenshot//lib/capybara-screenshot/capybara.rb#31
module Capybara::SessionScreenshotOverrides
  # source://capybara-screenshot//lib/capybara-screenshot/capybara.rb#32
  def within_window(window_or_handle); end
end

# source://capybara-screenshot//lib/capybara-screenshot/helpers.rb#1
class CapybaraScreenshot; end

# source://capybara-screenshot//lib/capybara-screenshot/helpers.rb#2
module CapybaraScreenshot::Helpers
  extend ::CapybaraScreenshot::Helpers

  # source://capybara-screenshot//lib/capybara-screenshot/helpers.rb#19
  def black(text); end

  # source://capybara-screenshot//lib/capybara-screenshot/helpers.rb#19
  def blue(text); end

  # source://capybara-screenshot//lib/capybara-screenshot/helpers.rb#23
  def bright_black(text); end

  # source://capybara-screenshot//lib/capybara-screenshot/helpers.rb#23
  def bright_blue(text); end

  # source://capybara-screenshot//lib/capybara-screenshot/helpers.rb#23
  def bright_cyan(text); end

  # source://capybara-screenshot//lib/capybara-screenshot/helpers.rb#23
  def bright_green(text); end

  # source://capybara-screenshot//lib/capybara-screenshot/helpers.rb#23
  def bright_magenta(text); end

  # source://capybara-screenshot//lib/capybara-screenshot/helpers.rb#23
  def bright_purple(text); end

  # source://capybara-screenshot//lib/capybara-screenshot/helpers.rb#23
  def bright_red(text); end

  # source://capybara-screenshot//lib/capybara-screenshot/helpers.rb#23
  def bright_white(text); end

  # source://capybara-screenshot//lib/capybara-screenshot/helpers.rb#23
  def bright_yellow(text); end

  # source://capybara-screenshot//lib/capybara-screenshot/helpers.rb#19
  def cyan(text); end

  # source://capybara-screenshot//lib/capybara-screenshot/helpers.rb#19
  def green(text); end

  # source://capybara-screenshot//lib/capybara-screenshot/helpers.rb#19
  def magenta(text); end

  # source://capybara-screenshot//lib/capybara-screenshot/helpers.rb#19
  def purple(text); end

  # source://capybara-screenshot//lib/capybara-screenshot/helpers.rb#19
  def red(text); end

  # source://capybara-screenshot//lib/capybara-screenshot/helpers.rb#19
  def white(text); end

  # source://capybara-screenshot//lib/capybara-screenshot/helpers.rb#19
  def yellow(text); end
end

# source://capybara-screenshot//lib/capybara-screenshot/helpers.rb#5
CapybaraScreenshot::Helpers::COLORS = T.let(T.unsafe(nil), Hash)
